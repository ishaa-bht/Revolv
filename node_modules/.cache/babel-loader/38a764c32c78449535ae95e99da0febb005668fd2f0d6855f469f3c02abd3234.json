{"ast":null,"code":"var _jsxFileName = \"D:\\\\Revolv\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\n// import HomePage from \"./pages/HomePage\";\n// import AboutPage from \"./pages/AboutPage\";\n// import QueryPage from \"./pages/QueryPage\";\n\n// function App() {\n//   return (\n//     <Router>\n//       <Header />\n//       <Routes>\n//         <Route path=\"/\" element={<HomePage />} />\n//         <Route path=\"/about\" element={<AboutPage />} />\n//         <Route path=\"/query\" element={<QueryPage />} />\n//       </Routes>\n//       <Footer />\n//     </Router>\n//   );\n// }\n\n// export default App;\n// import React, { useState } from 'react';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     window.history.back(); // Go back to the previous page when modal is closed\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header onGetStarted={handleGetStarted} />\n//       <Features />\n//       <Testimonials />\n//       <Footer />\n\n//       {isModalOpen && !isSignedUp && <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />}\n//       {isSignedUp && <UserInfoForm />}\n//       {isSignedUp && <QueriesPage />}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleSignupSuccess = () => {\n//     setIsModalOpen(false);\n//     navigate('/user-info'); // Redirect to the user info form\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header onGetStarted={handleGetStarted} />\n//       <Routes>\n//         <Route path=\"/\" element={<><Features /><Testimonials /><Footer /></>} />\n//         <Route path=\"/user-info\" element={<UserInfoForm />} />\n//         <Route path=\"/queries\" element={<QueriesPage />} />\n//       </Routes>\n//       {isModalOpen && <AuthModal closeModal={closeModal} onSignupSuccess={handleSignupSuccess} />}\n//     </div>\n//   );\n// };\n\n// const MainApp = () => (\n//   <Router>\n//     <App />\n//   </Router>\n// );\n\n// export default MainApp;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// // export default App;\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const [bgColor, setBgColor] = useState(\"#23446e\"); // Initial color\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       const scrollTop = window.scrollY;\n//       const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\n//       const scrollRatio = Math.min(scrollTop / scrollHeight, 1); // Ensure between 0 and 1\n\n//       // Define start and end colors in RGB\n//       const startColor = [35, 68, 110]; // #23446e (dark blue)\n//       const endColor = [207, 227, 249]; // #cfe3f9 (light blue)\n\n//       // Calculate interpolated color\n//       const newColor = startColor.map((start, i) =>\n//         Math.round(start + (endColor[i] - start) * scrollRatio)\n//       );\n\n//       setBgColor(`rgb(${newColor[0]}, ${newColor[1]}, ${newColor[2]})`);\n//     };\n\n//     window.addEventListener(\"scroll\", handleScroll);\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\n//   }, []);\n\n//   return (\n//     <Router>\n//       <div\n//         className=\"App\"\n//         style={{\n//           backgroundColor: bgColor,\n//           transition: \"background 0.3s ease-in-out\",\n//           minHeight: \"100vh\",\n//         }}\n//       >\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// import SeekerPage from './components/SeekerPage'; // Import the new SeekerPage\n// import ResultDisplay from './components/ResultDisplay';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const [userType, setUserType] = useState('business'); // Track selected user type\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal\n//                     closeModal={closeModal}\n//                     setIsSignedUp={setIsSignedUp}\n//                     setUserType={setUserType} // Pass user type setter\n//                   />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/seeker\"\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// import SeekerPage from './components/SeekerPage';\n// import ResultDisplay from './components/ResultDisplay';\n// import JobProposal from './components/JobProposal';\n// import PostJobDashboard from './components/PostJobDashboard';\n// import QRGenerationPage from './components/QRGenerationPage';\n// import WebsiteLinkQRPage from './components/WebsiteLinkQRPage';\n// import WithAIPage from './components/WithAIPage';\n// import JobListingPage from './components/JobListingPage';\n\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const [userType, setUserType] = useState('business');\n\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal\n//                     closeModal={closeModal}\n//                     setIsSignedUp={setIsSignedUp}\n//                     setUserType={setUserType}\n//                   />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/seeker\"\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/results\"\n//             element={isSignedUp && userType === 'business' ? <ResultDisplay /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/job-listings\"\n//             element={isSignedUp && userType === 'seeker' ? <JobListingPage /> : <Navigate to=\"/\" />}\n//           />\n//            <Route path=\"/job-proposal\" element={<JobProposal />} />\n//            <Route path=\"/post-job-dashboard\" element={<PostJobDashboard />} />\n//            <Route\n//             path=\"/qr-generation\"\n//             element={isSignedUp && userType === 'business' ? <QRGenerationPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/website-link-qr\"\n//             element={isSignedUp && userType === 'business' ? <WebsiteLinkQRPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/with-ai\"\n//             element={isSignedUp && userType === 'business' ? <WithAIPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react'; // <-- add useEffect here\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Features from './components/Features';\nimport Testimonials from './components/Testimonials';\nimport Footer from './components/Footer';\nimport AuthModal from './components/AuthModal';\nimport UserInfoForm from './components/UserInfoForm';\nimport QueriesPage from './components/QueriesPage';\nimport SeekerPage from './components/SeekerPage';\nimport ResultDisplay from './components/ResultDisplay';\nimport JobProposal from './components/JobProposal';\nimport PostJobDashboard from './components/PostJobDashboard';\nimport QRGenerationPage from './components/QRGenerationPage';\nimport WebsiteLinkQRPage from './components/WebsiteLinkQRPage';\nimport WithAIPage from './components/WithAIPage';\nimport JobListingPage from './components/JobListingPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const [userType, setUserType] = useState('business');\n  const [apiData, setApiData] = useState(null); // <-- to store API response\n\n  const handleGetStarted = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // 🔥 Fetch data from Flask backend when app loads\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/predict`) // <-- example endpoint\n    .then(response => response.json()).then(data => {\n      console.log('API Data:', data);\n      setApiData(data); // Save response to state if needed\n    }).catch(error => {\n      console.error('Error fetching API:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              onGetStarted: handleGetStarted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Testimonials, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AuthModal, {\n              closeModal: closeModal,\n              setIsSignedUp: setIsSignedUp,\n              setUserType: setUserType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/userinfo\",\n          element: isSignedUp ? /*#__PURE__*/_jsxDEV(UserInfoForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/queries\",\n          element: isSignedUp && userType === 'business' ? /*#__PURE__*/_jsxDEV(QueriesPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/seeker\",\n          element: isSignedUp && userType === 'seeker' ? /*#__PURE__*/_jsxDEV(SeekerPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/results\",\n          element: isSignedUp && userType === 'business' ? /*#__PURE__*/_jsxDEV(ResultDisplay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/job-listings\",\n          element: isSignedUp && userType === 'seeker' ? /*#__PURE__*/_jsxDEV(JobListingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/job-proposal\",\n          element: /*#__PURE__*/_jsxDEV(JobProposal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post-job-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(PostJobDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qr-generation\",\n          element: isSignedUp && userType === 'business' ? /*#__PURE__*/_jsxDEV(QRGenerationPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/website-link-qr\",\n          element: isSignedUp && userType === 'business' ? /*#__PURE__*/_jsxDEV(WebsiteLinkQRPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/with-ai\",\n          element: isSignedUp && userType === 'business' ? /*#__PURE__*/_jsxDEV(WithAIPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 580,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xj3J+ZoLsEcxj9BTsBh9DXo4npg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Header","Features","Testimonials","Footer","AuthModal","UserInfoForm","QueriesPage","SeekerPage","ResultDisplay","JobProposal","PostJobDashboard","QRGenerationPage","WebsiteLinkQRPage","WithAIPage","JobListingPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isModalOpen","setIsModalOpen","isSignedUp","setIsSignedUp","userType","setUserType","apiData","setApiData","handleGetStarted","closeModal","fetch","process","env","REACT_APP_API_URL","then","response","json","data","console","log","catch","error","children","className","path","element","onGetStarted","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/Revolv/src/App.js"],"sourcesContent":["// import React from \"react\";\r\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n// import Header from \"./components/Header\";\r\n// import Footer from \"./components/Footer\";\r\n// import HomePage from \"./pages/HomePage\";\r\n// import AboutPage from \"./pages/AboutPage\";\r\n// import QueryPage from \"./pages/QueryPage\";\r\n\r\n// function App() {\r\n//   return (\r\n//     <Router>\r\n//       <Header />\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<HomePage />} />\r\n//         <Route path=\"/about\" element={<AboutPage />} />\r\n//         <Route path=\"/query\" element={<QueryPage />} />\r\n//       </Routes>\r\n//       <Footer />\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n// import React, { useState } from 'react';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     window.history.back(); // Go back to the previous page when modal is closed\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Header onGetStarted={handleGetStarted} />\r\n//       <Features />\r\n//       <Testimonials />\r\n//       <Footer />\r\n      \r\n//       {isModalOpen && !isSignedUp && <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />}\r\n//       {isSignedUp && <UserInfoForm />}\r\n//       {isSignedUp && <QueriesPage />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   const handleSignupSuccess = () => {\r\n//     setIsModalOpen(false);\r\n//     navigate('/user-info'); // Redirect to the user info form\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Header onGetStarted={handleGetStarted} />\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<><Features /><Testimonials /><Footer /></>} />\r\n//         <Route path=\"/user-info\" element={<UserInfoForm />} />\r\n//         <Route path=\"/queries\" element={<QueriesPage />} />\r\n//       </Routes>\r\n//       {isModalOpen && <AuthModal closeModal={closeModal} onSignupSuccess={handleSignupSuccess} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const MainApp = () => (\r\n//   <Router>\r\n//     <App />\r\n//   </Router>\r\n// );\r\n\r\n// export default MainApp;\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// // export default App;\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// // export default App;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n//   const [bgColor, setBgColor] = useState(\"#23446e\"); // Initial color\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const handleScroll = () => {\r\n//       const scrollTop = window.scrollY;\r\n//       const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\r\n//       const scrollRatio = Math.min(scrollTop / scrollHeight, 1); // Ensure between 0 and 1\r\n\r\n//       // Define start and end colors in RGB\r\n//       const startColor = [35, 68, 110]; // #23446e (dark blue)\r\n//       const endColor = [207, 227, 249]; // #cfe3f9 (light blue)\r\n\r\n//       // Calculate interpolated color\r\n//       const newColor = startColor.map((start, i) =>\r\n//         Math.round(start + (endColor[i] - start) * scrollRatio)\r\n//       );\r\n\r\n//       setBgColor(`rgb(${newColor[0]}, ${newColor[1]}, ${newColor[2]})`);\r\n//     };\r\n\r\n//     window.addEventListener(\"scroll\", handleScroll);\r\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div\r\n//         className=\"App\"\r\n//         style={{\r\n//           backgroundColor: bgColor,\r\n//           transition: \"background 0.3s ease-in-out\",\r\n//           minHeight: \"100vh\",\r\n//         }}\r\n//       >\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// export default App;\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n// import SeekerPage from './components/SeekerPage'; // Import the new SeekerPage\r\n// import ResultDisplay from './components/ResultDisplay';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n//   const [userType, setUserType] = useState('business'); // Track selected user type\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal\r\n//                     closeModal={closeModal}\r\n//                     setIsSignedUp={setIsSignedUp}\r\n//                     setUserType={setUserType} // Pass user type setter\r\n//                   />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/seeker\"\r\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n// import SeekerPage from './components/SeekerPage';\r\n// import ResultDisplay from './components/ResultDisplay';\r\n// import JobProposal from './components/JobProposal';\r\n// import PostJobDashboard from './components/PostJobDashboard';\r\n// import QRGenerationPage from './components/QRGenerationPage';\r\n// import WebsiteLinkQRPage from './components/WebsiteLinkQRPage';\r\n// import WithAIPage from './components/WithAIPage';\r\n// import JobListingPage from './components/JobListingPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n//   const [userType, setUserType] = useState('business');\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal\r\n//                     closeModal={closeModal}\r\n//                     setIsSignedUp={setIsSignedUp}\r\n//                     setUserType={setUserType}\r\n//                   />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/seeker\"\r\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/results\"\r\n//             element={isSignedUp && userType === 'business' ? <ResultDisplay /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/job-listings\"\r\n//             element={isSignedUp && userType === 'seeker' ? <JobListingPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//            <Route path=\"/job-proposal\" element={<JobProposal />} />\r\n//            <Route path=\"/post-job-dashboard\" element={<PostJobDashboard />} />\r\n//            <Route\r\n//             path=\"/qr-generation\"\r\n//             element={isSignedUp && userType === 'business' ? <QRGenerationPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/website-link-qr\"\r\n//             element={isSignedUp && userType === 'business' ? <WebsiteLinkQRPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/with-ai\"\r\n//             element={isSignedUp && userType === 'business' ? <WithAIPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\nimport React, { useState, useEffect } from 'react'; // <-- add useEffect here\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Features from './components/Features';\r\nimport Testimonials from './components/Testimonials';\r\nimport Footer from './components/Footer';\r\nimport AuthModal from './components/AuthModal';\r\nimport UserInfoForm from './components/UserInfoForm';\r\nimport QueriesPage from './components/QueriesPage';\r\nimport SeekerPage from './components/SeekerPage';\r\nimport ResultDisplay from './components/ResultDisplay';\r\nimport JobProposal from './components/JobProposal';\r\nimport PostJobDashboard from './components/PostJobDashboard';\r\nimport QRGenerationPage from './components/QRGenerationPage';\r\nimport WebsiteLinkQRPage from './components/WebsiteLinkQRPage';\r\nimport WithAIPage from './components/WithAIPage';\r\nimport JobListingPage from './components/JobListingPage';\r\n\r\nconst App = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isSignedUp, setIsSignedUp] = useState(false);\r\n  const [userType, setUserType] = useState('business');\r\n  const [apiData, setApiData] = useState(null); // <-- to store API response\r\n\r\n  const handleGetStarted = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // 🔥 Fetch data from Flask backend when app loads\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/predict`) // <-- example endpoint\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('API Data:', data);\r\n        setApiData(data); // Save response to state if needed\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching API:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <Header onGetStarted={handleGetStarted} />\r\n                <Features />\r\n                <Testimonials />\r\n                <Footer />\r\n                {isModalOpen && (\r\n                  <AuthModal\r\n                    closeModal={closeModal}\r\n                    setIsSignedUp={setIsSignedUp}\r\n                    setUserType={setUserType}\r\n                  />\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/userinfo\"\r\n            element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/queries\"\r\n            element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/seeker\"\r\n            element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/results\"\r\n            element={isSignedUp && userType === 'business' ? <ResultDisplay /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/job-listings\"\r\n            element={isSignedUp && userType === 'seeker' ? <JobListingPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route path=\"/job-proposal\" element={<JobProposal />} />\r\n          <Route path=\"/post-job-dashboard\" element={<PostJobDashboard />} />\r\n          <Route\r\n            path=\"/qr-generation\"\r\n            element={isSignedUp && userType === 'business' ? <QRGenerationPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/website-link-qr\"\r\n            element={isSignedUp && userType === 'business' ? <WebsiteLinkQRPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/with-ai\"\r\n            element={isSignedUp && userType === 'business' ? <WithAIPage /> : <Navigate to=\"/\" />}\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}