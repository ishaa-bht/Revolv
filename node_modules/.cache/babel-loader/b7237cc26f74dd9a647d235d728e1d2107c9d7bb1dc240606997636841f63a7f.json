{"ast":null,"code":"// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\n// import HomePage from \"./pages/HomePage\";\n// import AboutPage from \"./pages/AboutPage\";\n// import QueryPage from \"./pages/QueryPage\";\n// function App() {\n//   return (\n//     <Router>\n//       <Header />\n//       <Routes>\n//         <Route path=\"/\" element={<HomePage />} />\n//         <Route path=\"/about\" element={<AboutPage />} />\n//         <Route path=\"/query\" element={<QueryPage />} />\n//       </Routes>\n//       <Footer />\n//     </Router>\n//   );\n// }\n// export default App;\n// import React, { useState } from 'react';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     window.history.back(); // Go back to the previous page when modal is closed\n//   };\n//   return (\n//     <div className=\"App\">\n//       <Header onGetStarted={handleGetStarted} />\n//       <Features />\n//       <Testimonials />\n//       <Footer />\n//       {isModalOpen && !isSignedUp && <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />}\n//       {isSignedUp && <UserInfoForm />}\n//       {isSignedUp && <QueriesPage />}\n//     </div>\n//   );\n// };\n// export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const navigate = useNavigate();\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   const handleSignupSuccess = () => {\n//     setIsModalOpen(false);\n//     navigate('/user-info'); // Redirect to the user info form\n//   };\n//   return (\n//     <div className=\"App\">\n//       <Header onGetStarted={handleGetStarted} />\n//       <Routes>\n//         <Route path=\"/\" element={<><Features /><Testimonials /><Footer /></>} />\n//         <Route path=\"/user-info\" element={<UserInfoForm />} />\n//         <Route path=\"/queries\" element={<QueriesPage />} />\n//       </Routes>\n//       {isModalOpen && <AuthModal closeModal={closeModal} onSignupSuccess={handleSignupSuccess} />}\n//     </div>\n//   );\n// };\n// const MainApp = () => (\n//   <Router>\n//     <App />\n//   </Router>\n// );\n// export default MainApp;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n// // export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n// // export default App;\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const [bgColor, setBgColor] = useState(\"#23446e\"); // Initial color\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       const scrollTop = window.scrollY;\n//       const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\n//       const scrollRatio = Math.min(scrollTop / scrollHeight, 1); // Ensure between 0 and 1\n//       // Define start and end colors in RGB\n//       const startColor = [35, 68, 110]; // #23446e (dark blue)\n//       const endColor = [207, 227, 249]; // #cfe3f9 (light blue)\n//       // Calculate interpolated color\n//       const newColor = startColor.map((start, i) =>\n//         Math.round(start + (endColor[i] - start) * scrollRatio)\n//       );\n//       setBgColor(`rgb(${newColor[0]}, ${newColor[1]}, ${newColor[2]})`);\n//     };\n//     window.addEventListener(\"scroll\", handleScroll);\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\n//   }, []);\n//   return (\n//     <Router>\n//       <div\n//         className=\"App\"\n//         style={{\n//           backgroundColor: bgColor,\n//           transition: \"background 0.3s ease-in-out\",\n//           minHeight: \"100vh\",\n//         }}\n//       >\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n// export default App;\n// export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n// export default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import './App.css';\n// import Header from './components/Header';\n// import Features from './components/Features';\n// import Testimonials from './components/Testimonials';\n// import Footer from './components/Footer';\n// import AuthModal from './components/AuthModal';\n// import UserInfoForm from './components/UserInfoForm';\n// import QueriesPage from './components/QueriesPage';\n// import SeekerPage from './components/SeekerPage'; // Import the new SeekerPage\n// import ResultDisplay from './components/ResultDisplay';\n// const App = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [isSignedUp, setIsSignedUp] = useState(false);\n//   const [userType, setUserType] = useState('business'); // Track selected user type\n//   const handleGetStarted = () => {\n//     setIsModalOpen(true);\n//   };\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <>\n//                 <Header onGetStarted={handleGetStarted} />\n//                 <Features />\n//                 <Testimonials />\n//                 <Footer />\n//                 {isModalOpen && (\n//                   <AuthModal\n//                     closeModal={closeModal}\n//                     setIsSignedUp={setIsSignedUp}\n//                     setUserType={setUserType} // Pass user type setter\n//                   />\n//                 )}\n//               </>\n//             }\n//           />\n//           <Route\n//             path=\"/userinfo\"\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/queries\"\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\n//           />\n//           <Route\n//             path=\"/seeker\"\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\n//           />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// };\n// export default App;\nimport React,{useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import'./App.css';import Header from'./components/Header';import Features from'./components/Features';import Testimonials from'./components/Testimonials';import Footer from'./components/Footer';import AuthModal from'./components/AuthModal';import UserInfoForm from'./components/UserInfoForm';import QueriesPage from'./components/QueriesPage';import SeekerPage from'./components/SeekerPage';import ResultDisplay from'./components/ResultDisplay';import JobProposal from'./components/JobProposal';import PostJobDashboard from'./components/PostJobDashboard';import QRGenerationPage from'./components/QRGenerationPage';import WebsiteLinkQRPage from'./components/WebsiteLinkQRPage';import WithAIPage from'./components/WithAIPage';import JobListingPage from'./components/JobListingPage';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isModalOpen,setIsModalOpen]=useState(false);const[isSignedUp,setIsSignedUp]=useState(false);const[userType,setUserType]=useState('business');const handleGetStarted=()=>{setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{onGetStarted:handleGetStarted}),/*#__PURE__*/_jsx(Features,{}),/*#__PURE__*/_jsx(Testimonials,{}),/*#__PURE__*/_jsx(Footer,{}),isModalOpen&&/*#__PURE__*/_jsx(AuthModal,{closeModal:closeModal,setIsSignedUp:setIsSignedUp,setUserType:setUserType})]})}),/*#__PURE__*/_jsx(Route,{path:\"/userinfo\",element:isSignedUp?/*#__PURE__*/_jsx(UserInfoForm,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/queries\",element:isSignedUp&&userType==='business'?/*#__PURE__*/_jsx(QueriesPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/seeker\",element:isSignedUp&&userType==='seeker'?/*#__PURE__*/_jsx(SeekerPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/results\",element:isSignedUp&&userType==='business'?/*#__PURE__*/_jsx(ResultDisplay,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/job-listings\",element:isSignedUp&&userType==='seeker'?/*#__PURE__*/_jsx(JobListingPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/job-proposal\",element:/*#__PURE__*/_jsx(JobProposal,{})}),/*#__PURE__*/_jsx(Route,{path:\"/post-job-dashboard\",element:/*#__PURE__*/_jsx(PostJobDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/qr-generation\",element:isSignedUp&&userType==='business'?/*#__PURE__*/_jsx(QRGenerationPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/website-link-qr\",element:isSignedUp&&userType==='business'?/*#__PURE__*/_jsx(WebsiteLinkQRPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/with-ai\",element:isSignedUp&&userType==='business'?/*#__PURE__*/_jsx(WithAIPage,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})})});};export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Header","Features","Testimonials","Footer","AuthModal","UserInfoForm","QueriesPage","SeekerPage","ResultDisplay","JobProposal","PostJobDashboard","QRGenerationPage","WebsiteLinkQRPage","WithAIPage","JobListingPage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","isModalOpen","setIsModalOpen","isSignedUp","setIsSignedUp","userType","setUserType","handleGetStarted","closeModal","children","className","path","element","onGetStarted","to"],"sources":["D:/Revolv/src/App.js"],"sourcesContent":["// import React from \"react\";\r\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n// import Header from \"./components/Header\";\r\n// import Footer from \"./components/Footer\";\r\n// import HomePage from \"./pages/HomePage\";\r\n// import AboutPage from \"./pages/AboutPage\";\r\n// import QueryPage from \"./pages/QueryPage\";\r\n\r\n// function App() {\r\n//   return (\r\n//     <Router>\r\n//       <Header />\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<HomePage />} />\r\n//         <Route path=\"/about\" element={<AboutPage />} />\r\n//         <Route path=\"/query\" element={<QueryPage />} />\r\n//       </Routes>\r\n//       <Footer />\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n// import React, { useState } from 'react';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     window.history.back(); // Go back to the previous page when modal is closed\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Header onGetStarted={handleGetStarted} />\r\n//       <Features />\r\n//       <Testimonials />\r\n//       <Footer />\r\n      \r\n//       {isModalOpen && !isSignedUp && <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />}\r\n//       {isSignedUp && <UserInfoForm />}\r\n//       {isSignedUp && <QueriesPage />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   const handleSignupSuccess = () => {\r\n//     setIsModalOpen(false);\r\n//     navigate('/user-info'); // Redirect to the user info form\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Header onGetStarted={handleGetStarted} />\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<><Features /><Testimonials /><Footer /></>} />\r\n//         <Route path=\"/user-info\" element={<UserInfoForm />} />\r\n//         <Route path=\"/queries\" element={<QueriesPage />} />\r\n//       </Routes>\r\n//       {isModalOpen && <AuthModal closeModal={closeModal} onSignupSuccess={handleSignupSuccess} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const MainApp = () => (\r\n//   <Router>\r\n//     <App />\r\n//   </Router>\r\n// );\r\n\r\n// export default MainApp;\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// // export default App;\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// // export default App;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n//   const [bgColor, setBgColor] = useState(\"#23446e\"); // Initial color\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const handleScroll = () => {\r\n//       const scrollTop = window.scrollY;\r\n//       const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\r\n//       const scrollRatio = Math.min(scrollTop / scrollHeight, 1); // Ensure between 0 and 1\r\n\r\n//       // Define start and end colors in RGB\r\n//       const startColor = [35, 68, 110]; // #23446e (dark blue)\r\n//       const endColor = [207, 227, 249]; // #cfe3f9 (light blue)\r\n\r\n//       // Calculate interpolated color\r\n//       const newColor = startColor.map((start, i) =>\r\n//         Math.round(start + (endColor[i] - start) * scrollRatio)\r\n//       );\r\n\r\n//       setBgColor(`rgb(${newColor[0]}, ${newColor[1]}, ${newColor[2]})`);\r\n//     };\r\n\r\n//     window.addEventListener(\"scroll\", handleScroll);\r\n//     return () => window.removeEventListener(\"scroll\", handleScroll);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div\r\n//         className=\"App\"\r\n//         style={{\r\n//           backgroundColor: bgColor,\r\n//           transition: \"background 0.3s ease-in-out\",\r\n//           minHeight: \"100vh\",\r\n//         }}\r\n//       >\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// export default App;\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal closeModal={closeModal} setIsSignedUp={setIsSignedUp} />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// import Header from './components/Header';\r\n// import Features from './components/Features';\r\n// import Testimonials from './components/Testimonials';\r\n// import Footer from './components/Footer';\r\n// import AuthModal from './components/AuthModal';\r\n// import UserInfoForm from './components/UserInfoForm';\r\n// import QueriesPage from './components/QueriesPage';\r\n// import SeekerPage from './components/SeekerPage'; // Import the new SeekerPage\r\n// import ResultDisplay from './components/ResultDisplay';\r\n\r\n// const App = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [isSignedUp, setIsSignedUp] = useState(false);\r\n//   const [userType, setUserType] = useState('business'); // Track selected user type\r\n\r\n//   const handleGetStarted = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <>\r\n//                 <Header onGetStarted={handleGetStarted} />\r\n//                 <Features />\r\n//                 <Testimonials />\r\n//                 <Footer />\r\n//                 {isModalOpen && (\r\n//                   <AuthModal\r\n//                     closeModal={closeModal}\r\n//                     setIsSignedUp={setIsSignedUp}\r\n//                     setUserType={setUserType} // Pass user type setter\r\n//                   />\r\n//                 )}\r\n//               </>\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/userinfo\"\r\n//             element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/queries\"\r\n//             element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//           <Route\r\n//             path=\"/seeker\"\r\n//             element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\r\n//           />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Features from './components/Features';\r\nimport Testimonials from './components/Testimonials';\r\nimport Footer from './components/Footer';\r\nimport AuthModal from './components/AuthModal';\r\nimport UserInfoForm from './components/UserInfoForm';\r\nimport QueriesPage from './components/QueriesPage';\r\nimport SeekerPage from './components/SeekerPage';\r\nimport ResultDisplay from './components/ResultDisplay';\r\nimport JobProposal from './components/JobProposal';\r\nimport PostJobDashboard from './components/PostJobDashboard';\r\nimport QRGenerationPage from './components/QRGenerationPage';\r\nimport WebsiteLinkQRPage from './components/WebsiteLinkQRPage';\r\nimport WithAIPage from './components/WithAIPage';\r\nimport JobListingPage from './components/JobListingPage';\r\n\r\nconst App = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isSignedUp, setIsSignedUp] = useState(false);\r\n  const [userType, setUserType] = useState('business');\r\n\r\n  const handleGetStarted = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <Header onGetStarted={handleGetStarted} />\r\n                <Features />\r\n                <Testimonials />\r\n                <Footer />\r\n                {isModalOpen && (\r\n                  <AuthModal\r\n                    closeModal={closeModal}\r\n                    setIsSignedUp={setIsSignedUp}\r\n                    setUserType={setUserType}\r\n                  />\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/userinfo\"\r\n            element={isSignedUp ? <UserInfoForm /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/queries\"\r\n            element={isSignedUp && userType === 'business' ? <QueriesPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/seeker\"\r\n            element={isSignedUp && userType === 'seeker' ? <SeekerPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/results\"\r\n            element={isSignedUp && userType === 'business' ? <ResultDisplay /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/job-listings\"\r\n            element={isSignedUp && userType === 'seeker' ? <JobListingPage /> : <Navigate to=\"/\" />}\r\n          />\r\n           <Route path=\"/job-proposal\" element={<JobProposal />} />\r\n           <Route path=\"/post-job-dashboard\" element={<PostJobDashboard />} />\r\n           <Route\r\n            path=\"/qr-generation\"\r\n            element={isSignedUp && userType === 'business' ? <QRGenerationPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/website-link-qr\"\r\n            element={isSignedUp && userType === 'business' ? <WebsiteLinkQRPage /> : <Navigate to=\"/\" />}\r\n          />\r\n          <Route\r\n            path=\"/with-ai\"\r\n            element={isSignedUp && userType === 'business' ? <WithAIPage /> : <Navigate to=\"/\" />}\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}