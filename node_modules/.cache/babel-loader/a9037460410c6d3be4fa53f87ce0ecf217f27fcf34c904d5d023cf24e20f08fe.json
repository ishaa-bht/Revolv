{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodeYatra\\\\Final\\\\Revolv\\\\src\\\\components\\\\JobListingPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n// import './JobListingsPage.css';\n\n// const JobListingsPage = () => {\n//   const location = useLocation();\n//   const queryParams = new URLSearchParams(location.search);\n//   const jobType = queryParams.get('jobType') || '';\n\n//   // Sample job listings\n//   const jobs = [\n//     { id: 1, title: 'Social Media Manager', salary: '$50,000', description: 'Manage social media accounts for brands.' },\n//     { id: 2, title: 'Software Developer', salary: '$80,000', description: 'Develop and maintain software applications.' },\n//     { id: 3, title: 'Graphic Designer', salary: '$45,000', description: 'Create visual content for marketing campaigns.' },\n//   ];\n\n//   // Filter jobs based on the selected job type\n//   const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(jobType.toLowerCase()));\n\n//   return (\n//     <div className=\"job-listings-container\">\n//       <h1 className=\"page-header\">Available Jobs</h1>\n//       <div className=\"job-list\">\n//         {filteredJobs.length > 0 ? (\n//           filteredJobs.map(job => (\n//             <div key={job.id} className=\"job-card\">\n//               <h2>{job.title}</h2>\n//               <p><strong>Salary:</strong> {job.salary}</p>\n//               <p>{job.description}</p>\n//               <button className=\"apply-button\">Apply</button>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No jobs found for \"{jobType}\"</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobListingsPage;\n\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n// import './JobListingsPage.css';\n\n// const JobListingsPage = () => {\n//   const location = useLocation();\n//   const queryParams = new URLSearchParams(location.search);\n//   const jobType = queryParams.get('jobType') || '';\n//   const jobTime = queryParams.get('jobTime') || '';\n//   const locationPref = queryParams.get('location') || '';\n\n//   // Sample job listings\n//   const jobs = [\n//     { id: 1, title: 'Social Media Manager', salary: '$50,000', jobTime: 'Full-time', location: 'New York' },\n//     { id: 2, title: 'Software Developer', salary: '$80,000', jobTime: 'Full-time', location: 'San Francisco' },\n//     { id: 3, title: 'Graphic Designer', salary: '$45,000', jobTime: 'Part-time', location: 'Los Angeles' },\n//   ];\n\n//   // Filter jobs based on user input\n//   const filteredJobs = jobs.filter(\n//     job =>\n//       job.title.toLowerCase().includes(jobType.toLowerCase()) &&\n//       (jobTime ? job.jobTime === jobTime : true) &&\n//       (locationPref ? job.location.toLowerCase().includes(locationPref.toLowerCase()) : true)\n//   );\n\n//   return (\n//     <div className=\"job-listings-container\">\n//       <h1 className=\"page-header\">Available Jobs</h1>\n//       <div className=\"job-list\">\n//         {filteredJobs.length > 0 ? (\n//           filteredJobs.map(job => (\n//             <div key={job.id} className=\"job-card\">\n//               <h2>{job.title}</h2>\n//               <p><strong>Salary:</strong> {job.salary}</p>\n//               <p><strong>Job Type:</strong> {job.jobTime}</p>\n//               <p><strong>Location:</strong> {job.location}</p>\n//               <button className=\"apply-button\">Apply</button>\n//             </div>\n//           ))\n//         ) : (\n//           <p>No jobs found for \"{jobType}\" in \"{locationPref}\"</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobListingsPage;\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './JobListingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobListingsPage = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const jobType = queryParams.get('jobType') || '';\n\n  // Dummy job listings\n  const jobs = [{\n    id: 1,\n    title: 'Social Media Manager',\n    salary: '$5000',\n    jobType: 'Full-time',\n    company: 'ABC Appareal',\n    contact: 'Hr@abc.com'\n  }, {\n    id: 2,\n    title: 'Social Media Manager',\n    salary: '$5500',\n    jobType: 'Freelance',\n    company: 'Stanley inc',\n    contact: 'contactus@stanly.com'\n  }, {\n    id: 3,\n    title: 'Social Media Manager',\n    salary: '$1500',\n    jobType: 'Part-Time',\n    company: 'Innotech soultion',\n    contact: 'contactus@innotech.com'\n  }, {\n    id: 4,\n    title: 'Social Media Manager',\n    salary: '$4000',\n    jobType: 'Full-time',\n    company: 'Rivi inc',\n    contact: 'contactus@rivi.com'\n  }, {\n    id: 5,\n    title: 'Social Media Manager',\n    salary: '$2000',\n    jobType: 'Freelance',\n    company: 'Bonum co',\n    contact: 'contactus@bonum.com'\n  }];\n\n  // Filter jobs based on the input type\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(jobType.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-listings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"Jobs Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list\",\n      children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Salary Offered:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 18\n          }, this), \" \", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Job Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 18\n          }, this), \" \", job.jobType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 18\n          }, this), \" \", job.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 18\n          }, this), \" \", job.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-button\",\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No jobs found for \\\"\", jobType, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(JobListingsPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = JobListingsPage;\nexport default JobListingsPage;\nvar _c;\n$RefreshReg$(_c, \"JobListingsPage\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","JobListingsPage","_s","location","queryParams","URLSearchParams","search","jobType","get","jobs","id","title","salary","company","contact","filteredJobs","filter","job","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["D:/CodeYatra/Final/Revolv/src/components/JobListingPage.js"],"sourcesContent":["// import React from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import './JobListingsPage.css';\r\n\r\n// const JobListingsPage = () => {\r\n//   const location = useLocation();\r\n//   const queryParams = new URLSearchParams(location.search);\r\n//   const jobType = queryParams.get('jobType') || '';\r\n\r\n//   // Sample job listings\r\n//   const jobs = [\r\n//     { id: 1, title: 'Social Media Manager', salary: '$50,000', description: 'Manage social media accounts for brands.' },\r\n//     { id: 2, title: 'Software Developer', salary: '$80,000', description: 'Develop and maintain software applications.' },\r\n//     { id: 3, title: 'Graphic Designer', salary: '$45,000', description: 'Create visual content for marketing campaigns.' },\r\n//   ];\r\n\r\n//   // Filter jobs based on the selected job type\r\n//   const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(jobType.toLowerCase()));\r\n\r\n//   return (\r\n//     <div className=\"job-listings-container\">\r\n//       <h1 className=\"page-header\">Available Jobs</h1>\r\n//       <div className=\"job-list\">\r\n//         {filteredJobs.length > 0 ? (\r\n//           filteredJobs.map(job => (\r\n//             <div key={job.id} className=\"job-card\">\r\n//               <h2>{job.title}</h2>\r\n//               <p><strong>Salary:</strong> {job.salary}</p>\r\n//               <p>{job.description}</p>\r\n//               <button className=\"apply-button\">Apply</button>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p>No jobs found for \"{jobType}\"</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobListingsPage;\r\n\r\n\r\n// import React from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import './JobListingsPage.css';\r\n\r\n// const JobListingsPage = () => {\r\n//   const location = useLocation();\r\n//   const queryParams = new URLSearchParams(location.search);\r\n//   const jobType = queryParams.get('jobType') || '';\r\n//   const jobTime = queryParams.get('jobTime') || '';\r\n//   const locationPref = queryParams.get('location') || '';\r\n\r\n//   // Sample job listings\r\n//   const jobs = [\r\n//     { id: 1, title: 'Social Media Manager', salary: '$50,000', jobTime: 'Full-time', location: 'New York' },\r\n//     { id: 2, title: 'Software Developer', salary: '$80,000', jobTime: 'Full-time', location: 'San Francisco' },\r\n//     { id: 3, title: 'Graphic Designer', salary: '$45,000', jobTime: 'Part-time', location: 'Los Angeles' },\r\n//   ];\r\n\r\n//   // Filter jobs based on user input\r\n//   const filteredJobs = jobs.filter(\r\n//     job =>\r\n//       job.title.toLowerCase().includes(jobType.toLowerCase()) &&\r\n//       (jobTime ? job.jobTime === jobTime : true) &&\r\n//       (locationPref ? job.location.toLowerCase().includes(locationPref.toLowerCase()) : true)\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"job-listings-container\">\r\n//       <h1 className=\"page-header\">Available Jobs</h1>\r\n//       <div className=\"job-list\">\r\n//         {filteredJobs.length > 0 ? (\r\n//           filteredJobs.map(job => (\r\n//             <div key={job.id} className=\"job-card\">\r\n//               <h2>{job.title}</h2>\r\n//               <p><strong>Salary:</strong> {job.salary}</p>\r\n//               <p><strong>Job Type:</strong> {job.jobTime}</p>\r\n//               <p><strong>Location:</strong> {job.location}</p>\r\n//               <button className=\"apply-button\">Apply</button>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p>No jobs found for \"{jobType}\" in \"{locationPref}\"</p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobListingsPage;\r\n\r\nimport React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './JobListingPage.css';\r\n\r\nconst JobListingsPage = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const jobType = queryParams.get('jobType') || '';\r\n\r\n  // Dummy job listings\r\n  const jobs = [\r\n    { id: 1, title: 'Social Media Manager', salary: '$5000', jobType: 'Full-time' , company : 'ABC Appareal',contact:'Hr@abc.com' },\r\n    { id: 2, title: 'Social Media Manager', salary: '$5500', jobType: 'Freelance' ,company : 'Stanley inc',contact:'contactus@stanly.com'},\r\n    { id: 3, title: 'Social Media Manager', salary: '$1500', jobType: 'Part-Time' ,company : 'Innotech soultion',contact:'contactus@innotech.com'},\r\n    { id: 4, title: 'Social Media Manager', salary: '$4000', jobType: 'Full-time' ,company : 'Rivi inc',contact:'contactus@rivi.com'},\r\n    { id: 5, title: 'Social Media Manager', salary: '$2000', jobType: 'Freelance' ,company : 'Bonum co',contact:'contactus@bonum.com'},\r\n  ];\r\n\r\n  // Filter jobs based on the input type\r\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(jobType.toLowerCase()));\r\n\r\n  return (\r\n    <div className=\"job-listings-container\">\r\n      <h1 className=\"page-header\">Jobs Available</h1>\r\n      <div className=\"job-list\">\r\n        {filteredJobs.length > 0 ? (\r\n          filteredJobs.map(job => (\r\n            <div key={job.id} className=\"job-card\">\r\n              <h2>{job.title}</h2>\r\n              <p><strong>Salary Offered:</strong> {job.salary}</p>\r\n              <p><strong>Job Type:</strong> {job.jobType}</p>\r\n              <p><strong>Company Name:</strong> {job.company}</p>\r\n              <p><strong>Contact:</strong> {job.contact}</p>\r\n              <button className=\"apply-button\">Apply</button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No jobs found for \"{jobType}\"</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListingsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}